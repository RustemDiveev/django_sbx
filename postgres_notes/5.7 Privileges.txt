Создаваемый объект БД назначается владельцу - обычно роль, которая выполнила инструкцию создания объекта БД.

Для большинства типов объектов - в начальном состоянии только владелец (или суперпользователь) может что-то сделать с объектом. Чтобы позволить другим ролям использовать объект - необходимо выдать привилегии роли.

Типы привилегий:
	SELECT 
	INSERT 
	UPDATE 
	DELETE 
	TRUNCATE 
	REFERENCES 
	TRIGGER 
	CREATE 
	CONNECT
	TEMPORARY 
	EXECUTE 
	USAGE 
	
Право изменения или уничтожения объекта не может быть отозвано у владельца объекта. 

Объект может бьыть назначен новому владельцу следующей командой:
ALTER TABLE <table_name> OWNER TO <new_owner>;

Такая команда может всегда выполняться суперпользователем, обычные роли могут это выполнить, если они и текущие владельцы объекта, и члены новой роли-владельца. 

Для назначения привилегий используется команда GRANT. 
Например, если joe - существующая роль, accounts - существующая таблица, то назначение привилегии update выглядит следующим образом: 
GRANT UPDATE ON accounts TO joe;

Выдача всех привилегий особенных для типа объекта.
GRANT ALL ON accounts TO joe; 

Специальное название роли PUBLIC - можно использовать для выдачи привилегии каждой роли в системе. Также, можно настроить групповые роли для управления привилегиями когда есть множество пользователей в БД. 

Для отзыва ранее выданной привилегии, следует использовать команду REVOKE:
REVOKE ALL ON accounts FROM PUBLIC;

Обычно, только владелец объекта (или суперпользователь) может назначать или отзывать привилегии у объекта. Но, можно выдать привилегию WITH GRANT OPTION, которая даст возможность получателю назначать эту привилегию другим ролям. Если GRANT OPTION впоследствии отозвана, то все кто получил привилегию от получателя (напрямую, либо через цепочку назначений) - потеряют эту привилегию. 

Владелец объекта может отозвать свои собственные привилегии, например, чтобы сделать таблицу только для чтения для себя и для других, но владельцы всегда имеют все опции назначения, поэтому всегда могут настраивать свои привилегии. 

Доступные привилегии:
1. SELECT - позволяет выбирать данные из любой колонки и специальных колонок таблицы, представления, материализованного представления и у любого другого таблице-подобного объекта. Позволяет использовать COPY TO. Привилегия необходима для того, чтобы ссылаться на существующие значения колонок через UPDATE или DELETE. Для последовательностей, данная привилегия позволяет использовать функцию currval. Для LOB - привилегия позволяет их читать. 

2. INSERT - позволяет вставлять новую строку в таблицу, представление итп. Может быть выдана на определенные колонки, в таком случае - только эти колонки могут использоваться в команде INSERT (другие колонки получат значения по умолчанию). Позволяет использовать COPY FROM. 

3. UPDATE - позволяет обновлять любую колонку или специальную колонку таблицы, представления итп. (На практике, любая нетривиальная команда UPDATE требует привилегию SELECT - так как уоманда должна ссылаться на колонки таблицы чтобы определить какие строки следует обновлять и / или как вычислять новые значения для колонок). 
SELECT ... FOR UPDATE и SELECT ... FOR SHARE - требуют эту привилегию хотя бы на одну колонку в дополнении к привилегии SELECT. Для последовательностей - данная привилегия позволяет использовать функции nextval и setval. Для LOB-ов - привилегия позволяет запись или очистку объекта.

4. DELETE - позволяет удалять строку из таблицы, представления итп. (На практике, каждая нетривиальная команда DELETE - требует также и привилегию SELECT - так как команде необходимо сослаться на колонку таблицы, чтобы определить какие строки необходимо удалить).

5. TRUNCATE - позволяет очищать таблицу. 

6. REFERENCES - позволяет создавать ограничение внешнего ключа, ссылающегося на таблицу или специальные колонки таблицы. 

7. TRIGGER - позволяет создать триггер на таблицу, представление итп.

8. CREATE - Для БД позволяет новым схемам и публикациям (?) быть созданными внутри БД и позволяет доверяемым расширениям (?) быть установленными внутри БД. 

Для схем - позволяет новым объектам быть созданными внутри схемы. Для переименования существующего объекта, необходимо быть его владельцем и иметь данную привилегию для схемы. 

Для табличных пространств - позволяет таблицам, индексам и временным файлам быть созданным внутри табличного пространства и позволяет созданным БД, у которых есть табличное пространство - иметь данное табличное пространство по умолчанию. 

Отзыв данной привилегии не изменит существование или местоположение существующих объектов. 

9. CONNECT - позволяет подключаться к БД. Наличие данной привилегии проверяется при старте подключения (в дополнение к проверкам других ограничений в pg_hba.conf (?))

10. TEMPORARY - позволяет создавать временные таблицы при использовании БД. 

11. EXECUTE - позволяет вызвать функцию или процедуру, включая любой из операторов, имплементированных поверх функции. Единственный тип привилегии, применимый к функциям и процедурам. 

12. USAGE - для процедурных языков - позволяет использовать этот язык для создания функций на данном языке. Единственный тип привилегии, применимый к процедурным языкам. 

Для схем - позволяет обращаться к объектам, содержащимся в схеме (предполагая, что собственные требования к привилегиям объекта - выполнены). В основном - эта привилегия позволяет искать объекты внутри схемы. Без привилегии, видеть имена объектов тоже возможно через обращение к системным каталогам (?). Также, после отзыва данной привилегии - существующие сессии могут сохранять инструкции, которые ранее выполняли данный поиск, поэтому отзыв привилегии не надежный способ для предотвращения доступа к объекту. 

Для последовательностей - позволяет использовать функции currval и nextval. 

Для типов и доменов (?) - позволяет использовать их в создании таблиц, функций и других объектов схемы. Обратить внимание на то, что привилегия не контролиреует все использование типа - например, значения типа в запросах. USAGE только предотвращает создание объектов, которые зависят от типа. Главное назначение привилегии - контролировать какие пользователи могут создавать зависимости от типа, что может не дать владельцу типа изменить его в дальнейшем. 

Для внешних оберток над данными (?) - позволяет создать новые сервера, использующие внешнюю обертку над данными. 

Для внешних серверов - позволяет создавать внешние таблицы используя сервер. Держатели привилегии могут также создавать, изменять или удалять свои собственные пользовательские маппинги (?) ассоциированные с этим сервером. 

----------

Привилегии, требуемые для других команд - смотреть в разделе справочника в документации. 

Postgres выдает привилегии для некоторых типов объектов по умолчанию 
роли PUBLIC - когда объекты создаются. Никакие привилегии по умолчанию не выдаются при создании таблиц, колонок таблиц, последовательностей, внешних оберток данных, LOB-ов, схем и табличных пространств. 
Для других типов объектов расклад следующий: по умолчанию выдаются CONNECT и TEMPORARY для БД, EXECUTE для функций и процедур, USAGE для языков и типов данных (включая домены). Владелец объекта, конечно может, отозвать как привилегии по умолчанию, так и специально выданные привилегии. Для максимальной безопасности следует выполнить REVOKE в той же транзакции, в которой создается объект - тогда не будет окна, в котором другой пользователь может использовать объект. Также настройки привилегий по умолчанию можно перопределить командой ALTER DEFAULT PRIVILEGES. 

Ниже расположено соответствие привилегии, аббревиатур ACL и типы данных, к которым применимы привилегии. Эти аббревиатуры видны в выходных данных комманд psql снизу, или при просмотре ACL колонок системных каталогов: 

SELECT - r("read") - LARGE OBJECT, SEQUENCE, TABLE(table-like object), TABLE COLUMN 
INSERT - a("append") - TABLE, table column 
UPDATE - w("write") - LARGE OBJECT, SEQUENCE, TABLE, table column 
DELETE - d - TABLE 
TRUNCATE - D - table 
REFERENCES - x - TABLE, table column 
TRIGGER - t - TABLE 
CREATE - C - DATABASE, SCHEMA, TABLESPACE 
CONNECT - c - DATABASE 
TEMPORARY - T - DATABASE 
EXECUTE - X - FUNCTION, PROCEDURE 
USAGE - U - DOMAIN, FOREIGN DATA WRAPPER, FOREIGN SERVER, LANGUAGE, SCHEMA, SEQUENCE, TYPE 

Ниже расположено соответствие: 
Тип объекта -> Список всех привилегий -> Привилегии по умолчанию для PUBLIC -> комманда psql для просмотра имеющихся привилегий у типа объекта

DATABASE				-> CTc		-> Tc	-> \l 
DOMAIN					-> U		-> U	-> \dD+ 
FUNCTION, PROCEDURE		-> X		-> X	-> \df+ 
FOREIGN DATA WRAPPER	-> U		-> none	-> \dew+ 
FOREIGN SERVER			-> U		-> none	-> \des+ 
LANGUAGE				-> U		-> U	-> \dL+ 
LARGE OBJECT			-> rw		-> none	-> 
SCHEMA					-> UC		-> none	-> \dn+ 
SEQUENCE 				-> rwU		-> none -> \dp 
TABLE (table-like obj)	-> arwdDxt	-> none -> \dp
Table column 			-> arwx		-> none -> \dp
TABLESPACE 				-> C 		-> none -> \db+
TYPE 					-> U		-> U 	-> \dT+

Привилегии выданные на определенный объект показываются как список из записей aclitem - где каждая запись aclitem описывает привилегии, в разрезе объекта, того, кому выдали привилегии и того, кто выдал привилегию.

Например, calvin=r*w/hobbes означает, что роль calvin имеет привилегию SELECT(r) с grant option (*) и не раздаваемую привеилгию UPDATE(w), которая выдана ролью hobbes. Если у calvin есть привилегии, выданный на тот же объект, но выданные другой ролью, то они появятся в отдельной записи aclitem. Пустое место у того, кому выдали привилегию означает что это PUBLIC. 

Например, предположим, что пользователь miriam создает таблицу mytable и делает следующее:
GRANT SELECT ON mytable TO PUBLIC;
GRANT SELECT, UPDATE, INSERT ON mytable TO admin;
GRANT SELECT (col1), UPDATE (col1) ON mytable TO miriam_rw;

Комманда \dp mytable покажет следующее: 
(переформатировал результат запроса в column=value)
schema				= public
name 				= mytable
type 				= table 
access privileges 	= miriam=arwdDxt/miriam+
					  r/miriam+
					  admin=arw/miriam
column privileges 	= col1:
						miriam_rw=rw/miriam
policies 			= 

Если колонка access privileges пуста, то это означает что у объекта есть привилегии по умолчанию (запись о привилегиях в соответствующем системном каталоге - пуста). Привилегии по умолчанию всегда включают в себя все привилегии владельца и могут включать некоторые привилегии для PUBLIC в зависимости от типа объекта. Первый GRANT или REVOKE на объекте инициирует привилегии по умолчанию (генерируя, например, miriam=arwdDxt/miriam+). По аналогии, записи в column privileges - только для колонок с привилегиями не по умолчанию. (Примечание: под привилегиями по умолчанию всегда понимаются встроенные привилегии по умолчанию для типа объекта. Объект, чьи привилегии были затронуты ALTER DEFAULT PRIVILEGES всегда будет иметь записи.)

Неявные возможности владельца по раздаче привилегии отображаться не будут. * появиться только тогда, когда grant options были явно переданы кому-либо.
